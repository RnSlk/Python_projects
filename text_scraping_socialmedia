import os
os.chdir('/Users...')
from selenium import webdriver 
from selenium.webdriver.common.keys import Keys
from selenium.webdriver.support import expected_conditions as EC
from selenium.webdriver.common.by import By
from selenium.webdriver.support.wait import WebDriverWait
from selenium.webdriver.chrome.service import Service
from webdriver_manager.chrome import ChromeDriverManager
import csv
import pandas as pd

#auf Instagram gehen 
driver = webdriver.Chrome(service=Service(ChromeDriverManager().install()))
driver.get("https://www.instagram.com/")
#cookies
cookies = WebDriverWait(driver, 10).until(EC.element_to_be_clickable((By.XPATH, "//button[contains(text(), 'Nur erforderliche Cookies erlauben')]"))).click()

#login
username = WebDriverWait(driver, 10).until(EC.element_to_be_clickable((By.CSS_SELECTOR, "input[name='username']")))
password = WebDriverWait(driver, 10).until(EC.element_to_be_clickable((By.CSS_SELECTOR, "input[name='password']")))
username.clear()
password.clear()
username.send_keys("******")
password.send_keys(("******"))
#click login button
log_in = WebDriverWait(driver, 10).until(EC.element_to_be_clickable((By.CSS_SELECTOR, "button[type='submit']"))).click()

#save login information
not_now = WebDriverWait(driver, 10).until(EC.element_to_be_clickable((By.XPATH, "//button[contains(text(), 'Jetzt nicht')]"))).click()
#benachrichtigung nicht aktivieren 
notification = WebDriverWait(driver, 10).until(EC.element_to_be_clickable((By.XPATH, "//button[contains(text(), 'Jetzt nicht')]"))).click()

#searchbox
searchbox = WebDriverWait(driver, 20).until(EC.element_to_be_clickable((By.XPATH, "//input[@placeholder='Suchen']")))
searchbox.clear()
keyword = "samy_w99"
searchbox.send_keys(keyword)
searchbox.send_keys(Keys.ENTER)
#click on picture
bild = WebDriverWait(driver, 10).until(EC.element_to_be_clickable((By.XPATH, './/div[@class="_aagw"]'))).click()


#scrape comment & text and save it in two different tables 
templist = [] 
csvfile = []

for loop in range(100):
    pfeil = WebDriverWait(driver, 10).until(EC.element_to_be_clickable((By.XPATH, './/div[@class=" _aaqg _aaqh"]'))).click()
    insta_text = driver.find_elements(By.XPATH, './/span[@class="_aacl _aaco _aacu _aacx _aad7 _aade"]')
    #comment scraping
    for value in insta_text:
        table_dict={'text': value.text}
        templist.append(table_dict) 
        df = pd.DataFrame(templist)
        df.to_csv('tf_comments.csv') 
    #account name scraping
    accounts = driver.find_elements(By.XPATH, './/div[@class="_aasx"]//span[@class="_aap6 _aap7 _aap8"]')
    for acc in accounts:
        table_dict={'name': acc.text}
        csvfile.append(table_dict) 
        df = pd.DataFrame(csvfile)
        df.to_csv('tf_names.csv') 
        
        
        
 ###################################
 #R Code to merge dataframes 
 
comments <- read.csv("tf_comments.csv")
names <- read.csv("tf_names.csv")

#look at dataframes
str(comments)
str(names)

library(tidyverse)

#convert names
names <- names$name[1:1113] #bc has got one more row than comments 
df2 <- cbind(names, comments)
df2 <- subset(df2, select=-X)
view(df2)






